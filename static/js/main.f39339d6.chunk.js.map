{"version":3,"sources":["components/AddTodo.js","components/TodoItem.js","App.js","index.js"],"names":["AddTodo","onSubmit","event","preventDefault","todoItem","state","props","newTodo","handleTodoValue","todoId","todos","length","setState","id","value","target","completed","todosLength","this","className","FormControl","fullWidth","InputLabel","Input","onChange","required","Component","TodoItem","deleteTodo","index","markCompleted","Card","CardContent","Typography","variant","color","component","style","textDecoration","todo","CardActions","IconButton","aria-label","onClick","App","addNewTodo","splice","map","Container","maxWidth","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAuDeA,E,kDAnDb,aAAe,IAAD,8BACZ,gBAYFC,SAAW,SAACC,GACVA,EAAMC,iBACN,IAAMC,EAAW,EAAKC,MAAMD,SAC5B,EAAKE,MAAMC,QAAQH,IAhBP,EAqBdI,gBAAkB,SAACN,GACjB,IAAMO,EAAS,EAAKH,MAAMI,MAAMC,OAAO,EACvC,EAAKC,SAAS,CACZR,SAAU,CAERS,GAAIJ,EAEJK,MAAOZ,EAAMa,OAAOD,MACpBE,WAAW,MA1Bf,EAAKX,MAAQ,CACXY,YAAa,EACbb,SAAU,CACRS,GAAI,EACJC,MAAO,GACPE,WAAW,IARH,E,qDAmCZ,OACE,0BAAMf,SAAUiB,KAAKjB,SAAUkB,UAAU,iBACvC,kBAACC,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,4BACA,kBAACC,EAAA,EAAD,CACEV,GAAG,OACHC,MAAOI,KAAKb,MAAMD,SAASU,MAC3BU,SAAUN,KAAKV,gBACfiB,UAAQ,U,GA5CEC,a,mGC4CPC,E,4MAjCbC,WAAa,WACX,IAAMC,EAAQ,EAAKvB,MAAMuB,MACzB,EAAKvB,MAAMsB,WAAWC,I,EAGxBC,cAAgB,WACd,IAAMrB,EAAS,EAAKH,MAAMO,GAC1B,EAAKP,MAAMwB,cAAcrB,I,uDAIzB,OACE,kBAACsB,EAAA,EAAD,CAAMZ,UAAU,iBACd,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAOjB,KAAKZ,MAAMU,UAAa,UAAW,UAAWoB,UAAU,KAAKC,MAAOnB,KAAKZ,MAAMU,UAAa,CAACsB,eAAgB,gBAAkB,CAACA,eAAgB,SAC7KpB,KAAKZ,MAAMiC,MAEd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,aAAW,WAAWC,QAASzB,KAAKU,YAC9C,kBAAC,IAAD,OAEF,kBAACa,EAAA,EAAD,CAAYC,aAAW,WAAWC,QAASzB,KAAKY,eAE5CZ,KAAKZ,MAAMU,UAAY,kBAAC,IAAD,MAAmB,kBAAC,IAAD,c,GAzBnCU,aC8CRkB,E,kDApDb,aAAe,IAAD,8BACZ,gBAOFC,WAAa,SAACtC,GACZ,EAAKK,SAAS,CACZF,MAAM,GAAD,mBAAM,EAAKL,MAAMK,OAAjB,CAAwBH,OAVnB,EAcdqB,WAAa,SAACC,GACZ,EAAKxB,MAAMK,MAAMoC,OAAOjB,EAAO,GAC/B,EAAKjB,SAAS,CAAEF,MAAO,EAAKL,MAAMK,SAhBtB,EAmBdoB,cAAgB,SAACrB,GACf,EAAKG,SAAS,CACZF,MAAO,EAAKL,MAAMK,MAAMqC,KAAI,SAAAR,GAI1B,OAHIA,EAAK1B,KAAOJ,IACd8B,EAAKvB,WAAauB,EAAKvB,WAElBuB,QAtBX,EAAKlC,MAAQ,CACXK,MAAO,IAJG,E,qDA+BJ,IAAD,OACP,OACE,kBAACsC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,EAAD,CAAS1C,QAASW,KAAK2B,WAAYnC,MAAOQ,KAAKb,MAAMK,QAEnDQ,KAAKb,MAAMK,MAAMqC,KAAI,SAACR,EAAMV,GAC1B,OAAO,kBAAC,EAAD,CACLqB,IAAKX,EAAK1B,GACVgB,MAAOA,EACPU,KAAMA,EAAKzB,MACXc,WAAY,WAAQ,EAAKA,WAAWC,IACpCb,UAAWuB,EAAKvB,UAChBc,cAAe,WAAQ,EAAKA,cAAcS,EAAK1B,e,GA5C3Ca,aCAlByB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f39339d6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormControl, InputLabel, Input } from '@material-ui/core';\r\n\r\nclass AddTodo extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      todosLength: 0,\r\n      todoItem: {\r\n        id: 0,\r\n        value: '',\r\n        completed: false\r\n      },\r\n    };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const todoItem = this.state.todoItem;\r\n    this.props.newTodo(todoItem);\r\n    \r\n    \r\n  };\r\n\r\n  handleTodoValue = (event) => {\r\n    const todoId = this.props.todos.length+1;\r\n    this.setState({\r\n      todoItem: {\r\n        //   Set the ID\r\n        id: todoId,\r\n        // Set the value\r\n        value: event.target.value,\r\n        completed: false\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"margin-top-15\">\r\n        <FormControl fullWidth>\r\n          <InputLabel>What Are Going Todo</InputLabel>\r\n          <Input\r\n            id='todo'\r\n            value={this.state.todoItem.value}\r\n            onChange={this.handleTodoValue}\r\n            required\r\n          />\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\n\r\nclass TodoItem extends Component {\r\n\r\n  deleteTodo = () => {\r\n    const index = this.props.index;\r\n    this.props.deleteTodo(index);\r\n  };\r\n\r\n  markCompleted = () => {\r\n    const todoId = this.props.id;\r\n    this.props.markCompleted(todoId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className='margin-top-15'>\r\n        <CardContent>\r\n          <Typography variant='h5' color={this.props.completed  ? \"primary\": \"inherit\"} component='h2' style={this.props.completed  ? {textDecoration: \"line-through\"} : {textDecoration: \"none\"}}>\r\n            {this.props.todo}\r\n          </Typography>\r\n          <CardActions>\r\n            <IconButton aria-label='settings' onClick={this.deleteTodo}>\r\n              <DeleteOutlineOutlinedIcon />\r\n            </IconButton>\r\n            <IconButton aria-label='settings' onClick={this.markCompleted}>\r\n              {\r\n                this.props.completed ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon />\r\n              }\r\n            </IconButton>\r\n          </CardActions>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\nimport AddTodo from './components/AddTodo'\nimport { Container } from '@material-ui/core';\nimport TodoItem from './components/TodoItem'\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      todos: []\n    }\n  }\n\n  addNewTodo = (newTodo) => {\n    this.setState({\n      todos: [...this.state.todos, newTodo],\n    })\n  }\n\n  deleteTodo = (index) => {\n    this.state.todos.splice(index, 1)\n    this.setState({ todos: this.state.todos })\n  };\n\n  markCompleted = (todoId) => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === todoId) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  }\n\n\n  render() {\n    return (\n      <Container maxWidth=\"lg\">\n        <AddTodo newTodo={this.addNewTodo} todos={this.state.todos} />\n        {\n          this.state.todos.map((todo, index) => {\n            return <TodoItem\n              key={todo.id}\n              index={index}\n              todo={todo.value}\n              deleteTodo={() => { this.deleteTodo(index) }}\n              completed={todo.completed}\n              markCompleted={() => { this.markCompleted(todo.id) }} />\n          })\n        }\n      </Container>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}