{"version":3,"sources":["components/AddTodo.js","components/TodoItem.js","App.js","index.js"],"names":["AddTodo","onSubmit","event","preventDefault","todoItem","state","props","newTodo","setState","value","handleTodoValue","todoId","todos","length","id","target","completed","todosLength","this","className","FormControl","fullWidth","InputLabel","Input","onChange","required","Button","variant","color","size","type","Component","TodoItem","deleteTodo","index","markCompleted","Card","CardContent","Typography","component","style","textDecoration","todo","CardActions","IconButton","aria-label","onClick","App","addNewTodo","filteredTodos","updateLocalStorage","splice","map","reverse","filterCompleted","showCompleted","filter","unFilterCompleted","deleteAll","localStorage","removeItem","JSON","stringify","setItem","parse","getItem","Container","title","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f09391a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FormControl, InputLabel, Input, Button } from '@material-ui/core';\n\nclass AddTodo extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      todosLength: 0,\n      todoItem: {\n        id: 0,\n        value: '',\n        completed: false,\n      },\n    };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const todoItem = this.state.todoItem;\n    this.props.newTodo(todoItem);\n\n    this.setState({\n      todoItem: {\n        value: '',\n      },\n    });\n  };\n\n  handleTodoValue = (event) => {\n    const todoId = this.props.todos.length + 1;\n    this.setState({\n      todoItem: {\n        //   Set the ID\n        id: todoId,\n        // Set the value\n        value: event.target.value,\n        completed: false,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} className='margin-top-15 add-todo-form'>\n        <FormControl fullWidth>\n          <InputLabel>What Are Going Todo</InputLabel>\n          <Input\n            id='todo'\n            value={this.state.todoItem.value}\n            onChange={this.handleTodoValue}\n            required\n          />\n        </FormControl>\n        <Button variant='contained' color='primary' size='medium' type='submit'>\n          Add Todo\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default AddTodo;\n","import React, { Component } from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  IconButton,\n} from '@material-ui/core';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nclass TodoItem extends Component {\n  deleteTodo = () => {\n    const index = this.props.index;\n    this.props.deleteTodo(index);\n  };\n\n  markCompleted = () => {\n    const todoId = this.props.index;\n    this.props.markCompleted(todoId);\n  };\n\n  render() {\n    return (\n      <div>\n        <Card className='margin-top-15' >\n          <CardContent className='todo-item'>\n            <Typography\n              id='todoEditField'\n              variant='h5'\n              color={this.props.completed ? 'primary' : 'inherit'}\n              component='h2'\n              style={\n                this.props.completed\n                  ? { textDecoration: 'line-through' }\n                  : { textDecoration: 'none' }\n              }>\n              {this.props.todo}\n            </Typography>\n            <CardActions>\n              <IconButton aria-label='settings' onClick={this.deleteTodo}>\n                <DeleteOutlineOutlinedIcon />\n              </IconButton>\n              <IconButton aria-label='settings' onClick={this.markCompleted}>\n                {this.props.completed ? (\n                  <CheckBoxIcon />\n                ) : (\n                  <CheckBoxOutlineBlankIcon />\n                )}\n              </IconButton>\n            </CardActions>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport AddTodo from './components/AddTodo'\nimport { Container, Button } from '@material-ui/core';\nimport TodoItem from './components/TodoItem';\n\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      todos: JSON.parse(localStorage.getItem('todos') || \"[]\"),\n      filteredTodos: JSON.parse(localStorage.getItem('todos') || \"[]\"),\n      showCompleted: false\n    }\n  }\n\n  addNewTodo = (newTodo) => {\n    this.setState({\n      todos: [...this.state.todos, newTodo],\n      filteredTodos: [...this.state.filteredTodos, newTodo],\n    })\n\n    this.updateLocalStorage()\n  }\n\n  deleteTodo = (index) => {\n    this.state.todos.splice(index, 1);\n\n    this.setState({ filteredTodos: this.state.todos, todos: this.state.todos })\n\n    this.updateLocalStorage()\n  };\n\n  markCompleted = (todoId) => {\n    this.setState({\n      filteredTodos: this.state.filteredTodos.map(todo => {\n        if (todo.id === todoId) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n\n    this.updateLocalStorage()\n  }\n\n  reverse = () => {\n    this.setState({\n      filteredTodos: this.state.filteredTodos.reverse()\n    });\n  };\n\n  filterCompleted = () => {\n    this.setState({\n      showCompleted: true,\n      filteredTodos: [...this.state.todos].filter((todo) => {\n        return todo.completed\n      })\n    })\n  }\n\n  unFilterCompleted = () => {\n    this.setState({\n      showCompleted: false,\n      filteredTodos: this.state.todos\n    })\n  }\n\n  deleteAll = () => {\n    this.setState({\n      todos: [],\n      filteredTodos: []\n    });\n\n    localStorage.removeItem('todos')\n  };\n\n\n  updateLocalStorage = () => {\n    const todos = JSON.stringify(this.state.filteredTodos);\n    localStorage.setItem('todos', todos);\n  }\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <AddTodo newTodo={this.addNewTodo} todos={this.state.filteredTodos} />\n          <div className=\"buttons\">\n\n          <Button\n              fullWidth\n              variant=\"contained\"\n              color='primary'\n              title=\"delete all the todos from the list\"\n              onClick={this.reverse}>Reverse Order</Button>\n            {\n              this.state.showCompleted ? <Button\n                fullWidth\n                variant=\"contained\"\n                color='primary'\n                title=\"show all todos\"\n                onClick={this.unFilterCompleted}>Show All</Button> :\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color='primary'\n                  title=\"reverse the order of the todos list\"\n                  onClick={this.filterCompleted}>Filter Completed</Button>\n            }\n\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color='secondary'\n              title=\"delete all the todos from the list\"\n              onClick={this.deleteAll}>Delete All</Button>\n            \n          </div>\n\n          {\n            this.state.filteredTodos.map((todo, index) => {\n              return <TodoItem\n                key={todo.id}\n                index={index}\n                todo={todo.value}\n                deleteTodo={() => { this.deleteTodo(index) }}\n                completed={todo.completed}\n                markCompleted={() => { this.markCompleted(todo.id) }} />\n            })\n          }\n        </Container>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}