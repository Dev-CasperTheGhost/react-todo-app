{"version":3,"sources":["components/AddTodo.js","components/TodoItem.js","App.js","index.js"],"names":["AddTodo","onSubmit","event","preventDefault","todoItem","state","props","newTodo","setState","value","handleTodoValue","todoId","todos","length","id","target","completed","todosLength","this","className","FormControl","fullWidth","InputLabel","Input","onChange","required","Button","variant","color","size","type","Component","TodoItem","deleteTodo","index","markCompleted","Card","CardContent","Typography","component","style","textDecoration","todo","CardActions","IconButton","aria-label","onClick","App","addNewTodo","filteredTodos","updateLocalStorage","splice","map","reverse","filterCompleted","showCompleted","filter","unFilterCompleted","deleteAll","localStorage","removeItem","JSON","stringify","setItem","parse","getItem","Container","title","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06e6429e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormControl, InputLabel, Input, Button } from '@material-ui/core';\r\n\r\nclass AddTodo extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      todosLength: 0,\r\n      todoItem: {\r\n        id: 0,\r\n        value: '',\r\n        completed: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const todoItem = this.state.todoItem;\r\n    this.props.newTodo(todoItem);\r\n\r\n    this.setState({\r\n      todoItem: {\r\n        value: '',\r\n      },\r\n    });\r\n  };\r\n\r\n  handleTodoValue = (event) => {\r\n    const todoId = this.props.todos.length + 1;\r\n    this.setState({\r\n      todoItem: {\r\n        //   Set the ID\r\n        id: todoId,\r\n        // Set the value\r\n        value: event.target.value,\r\n        completed: false,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} className='margin-top-15 add-todo-form'>\r\n        <FormControl fullWidth>\r\n          <InputLabel>What Are Going Todo</InputLabel>\r\n          <Input\r\n            id='todo'\r\n            value={this.state.todoItem.value}\r\n            onChange={this.handleTodoValue}\r\n            required\r\n          />\r\n        </FormControl>\r\n        <Button variant='contained' color='primary' size='medium' type='submit'>\r\n          Add Todo\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nclass TodoItem extends Component {\r\n  deleteTodo = () => {\r\n    const index = this.props.index;\r\n    this.props.deleteTodo(index);\r\n  };\r\n\r\n  markCompleted = () => {\r\n    const todoId = this.props.index;\r\n    this.props.markCompleted(todoId);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card className='margin-top-15' >\r\n          <CardContent className='todo-item'>\r\n            <Typography\r\n              id='todoEditField'\r\n              variant='h5'\r\n              color={this.props.completed ? 'primary' : 'inherit'}\r\n              component='h2'\r\n              style={\r\n                this.props.completed\r\n                  ? { textDecoration: 'line-through' }\r\n                  : { textDecoration: 'none' }\r\n              }>\r\n              {this.props.todo}\r\n            </Typography>\r\n            <CardActions>\r\n              <IconButton aria-label='settings' onClick={this.deleteTodo}>\r\n                <DeleteOutlineOutlinedIcon />\r\n              </IconButton>\r\n              <IconButton aria-label='settings' onClick={this.markCompleted}>\r\n                {this.props.completed ? (\r\n                  <CheckBoxIcon />\r\n                ) : (\r\n                  <CheckBoxOutlineBlankIcon />\r\n                )}\r\n              </IconButton>\r\n            </CardActions>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport AddTodo from './components/AddTodo'\r\nimport { Container, Button } from '@material-ui/core';\r\nimport TodoItem from './components/TodoItem';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      todos: JSON.parse(localStorage.getItem('todos') || \"[]\"),\r\n      filteredTodos: JSON.parse(localStorage.getItem('todos') || \"[]\"),\r\n      showCompleted: false\r\n    }\r\n  }\r\n\r\n  addNewTodo = (newTodo) => {\r\n    this.setState({\r\n      todos: [...this.state.todos, newTodo],\r\n      filteredTodos: [...this.state.filteredTodos, newTodo],\r\n    })\r\n\r\n    this.updateLocalStorage()\r\n  }\r\n\r\n  deleteTodo = (index) => {\r\n    this.state.todos.splice(index, 1);\r\n\r\n    this.setState({ filteredTodos: this.state.todos, todos: this.state.todos })\r\n\r\n    this.updateLocalStorage()\r\n  };\r\n\r\n  markCompleted = (todoId) => {\r\n    this.setState({\r\n      filteredTodos: this.state.filteredTodos.map(todo => {\r\n        if (todo.id === todoId) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      }),\r\n    });\r\n\r\n    this.updateLocalStorage()\r\n  }\r\n\r\n  reverse = () => {\r\n    this.setState({\r\n      filteredTodos: this.state.filteredTodos.reverse()\r\n    });\r\n  };\r\n\r\n  filterCompleted = () => {\r\n    this.setState({\r\n      showCompleted: true,\r\n      filteredTodos: [...this.state.todos].filter((todo) => {\r\n        return todo.completed\r\n      })\r\n    })\r\n  }\r\n\r\n  unFilterCompleted = () => {\r\n    this.setState({\r\n      showCompleted: false,\r\n      filteredTodos: this.state.todos\r\n    })\r\n  }\r\n\r\n  deleteAll = () => {\r\n    this.setState({\r\n      todos: [],\r\n      filteredTodos: []\r\n    });\r\n\r\n    localStorage.removeItem('todos')\r\n  };\r\n\r\n\r\n  updateLocalStorage = () => {\r\n    const todos = JSON.stringify(this.state.filteredTodos);\r\n    localStorage.setItem('todos', todos);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <AddTodo newTodo={this.addNewTodo} todos={this.state.filteredTodos} />\r\n          <div className=\"buttons\">\r\n\r\n          <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color='primary'\r\n              title=\"delete all the todos from the list\"\r\n              onClick={this.reverse}>Reverse Order</Button>\r\n            {\r\n              this.state.showCompleted ? <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color='primary'\r\n                title=\"show all todos\"\r\n                onClick={this.unFilterCompleted}>Show All</Button> :\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color='primary'\r\n                  title=\"reverse the order of the todos list\"\r\n                  onClick={this.filterCompleted}>Filter Completed</Button>\r\n            }\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color='secondary'\r\n              title=\"delete all the todos from the list\"\r\n              onClick={this.deleteAll}>Delete All</Button>\r\n            \r\n          </div>\r\n\r\n          {\r\n            this.state.filteredTodos.map((todo, index) => {\r\n              return <TodoItem\r\n                key={todo.id}\r\n                index={index}\r\n                todo={todo.value}\r\n                deleteTodo={() => { this.deleteTodo(index) }}\r\n                completed={todo.completed}\r\n                markCompleted={() => { this.markCompleted(todo.id) }} />\r\n            })\r\n          }\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}